"use client";

import QuoteText from "@/components/QuoteText";
import ThemeToggle from "@/components/ThemeToggle";
import PartyInput from "@/components/PartyInput";
import { Button } from "@/components/ui/button";
import { CircleHelp } from "lucide-react";
import Image from "next/image";
import { useCallback, useState } from "react";
import { parties, Party } from "@/data/party";
import { cn } from "@/lib/utils";
import PromiseDialog from "@/components/PromiseDialog";
import { DailyPromise } from "@/data/promise";
interface Guess {
  partyId: number;
  partyName: string;
  isCorrect: boolean;
}

const EmptyGuess: React.FC = () => {
  return (
    <div className="w-full bg-zinc-100 dark:bg-zinc-900 border rounded-md px-3 py-2">
      &nbsp;
    </div>
  );
};

const GuessResult: React.FC<{ guess: Guess }> = ({ guess }) => {
  return (
    <div
      className={cn(
        "w-full border rounded-md px-3 py-2 text-center",
        guess.isCorrect
          ? "bg-green-400 dark:bg-green-600"
          : "bg-red-300 dark:bg-red-900"
      )}
    >
      ‡∏û‡∏£‡∏£‡∏Ñ{guess.partyName}
    </div>
  );
};

export default function PromiseDle() {
  const promise: DailyPromise = {
    title:
      "‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏°‡∏µ Mini Sport Complex ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ù‡∏∂‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏µ‡∏¨‡∏≤",
    partyId: 10,
    partyName: "‡∏ä‡∏≤‡∏ï‡∏¥‡∏û‡∏±‡∏í‡∏ô‡∏≤",
    status: "nodata",
    explain:
      "‡πÉ‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡πÑ‡∏ó‡∏¢‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ 1 ‡πÉ‡∏ô 5 ‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏û‡∏£‡∏£‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≤‡∏ï‡∏¥‡∏°‡∏µ‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ñ‡∏¥‡∏î‡πÅ‡∏ö‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ö‡∏±‡∏ô‡πÑ‡∏î ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏≠‡∏≤‡∏¢‡∏∏ 60 ‡∏õ‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ ‡πÑ‡∏î‡πâ‡πÄ‡∏á‡∏¥‡∏ô 2,000‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô‡∏´‡∏°‡∏î ‡∏ï‡∏•‡∏≠‡∏î‡∏ä‡∏µ‡∏û ‡∏ã‡∏∂‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏à‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏¢‡∏±‡∏á‡∏ä‡∏µ‡∏û‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ö‡∏±‡∏ô‡πÑ‡∏î ‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≤‡∏¢‡∏∏ 60 ‡∏õ‡∏µ ‡∏ñ‡∏∂‡∏á 69 ‡∏õ‡∏µ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏¢‡∏±‡∏á‡∏ä‡∏µ‡∏û‡∏Ñ‡∏ô‡∏ä‡∏£‡∏≤ 600 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏≠‡∏≤‡∏¢‡∏∏ 70 ‡∏õ‡∏µ ‡∏ñ‡∏∂‡∏á 79 ‡∏õ‡∏µ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô 700 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏≠‡∏≤‡∏¢‡∏∏ 80 ‡∏õ‡∏µ ‡∏ñ‡∏∂‡∏á 89 ‡∏õ‡∏µ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö 800 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏≠‡∏≤‡∏¢‡∏∏ 90‡∏õ‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ 1,000 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏Ñ‡πà‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏∑‡∏≠‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏´‡πà‡∏á‡∏£‡∏±‡∏ê\n\n‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏õ‡∏•‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô 2565 ‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏•‡∏°‡∏µ‡∏°‡∏ï‡∏¥‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÅ‡∏Å‡πà‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏¢‡∏±‡∏á‡∏ä‡∏µ‡∏û‡πÉ‡∏ô‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 2565  ‡πÇ‡∏î‡∏¢‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÅ‡∏ö‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏ö‡∏±‡∏ô‡πÑ‡∏î 100-250 ‡∏ö‡∏≤‡∏ó  ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
    link: "https://www.bangkokbiznews.com/advertorials/news/1259",
  };

  const [guesses, setGuesses] = useState<Guess[]>([]);
  const [selectedParty, setSelectedParty] = useState<Party | null>(null);
  const [isDone, setIsDone] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);

  const onPartyChange = (party: Party | null) => {
    setSelectedParty(party);
  };

  const onGuess = useCallback(
    (party: Party) => {
      const isCorrect = promise.partyId === party.id;
      const guess: Guess = {
        partyId: party.id,
        partyName: party.name,
        isCorrect: isCorrect,
      };
      setGuesses((prevGuesses) => [...prevGuesses, guess]);
      setSelectedParty(null);

      if (isCorrect || guesses.length >= 5) {
        setIsDone(true);
        setIsCorrect(isCorrect);
      }
    },
    [guesses, promise.partyId]
  );

  const numGuesses = guesses.length;
  const partyList = parties.filter(
    (party) => !guesses.some((guess) => guess.partyId === party.id)
  );

  return (
    <div className="min-h-screen flex flex-col gap-8">
      <header className="flex flex-row justify-between items-center p-4 border-b border-gray-200">
        <Button variant="outline" size="icon">
          <CircleHelp />
        </Button>
        <div className="flex flex-col items-center">
          <span className="text-xl md:text-3xl font-bold">
            üáπüá≠ Parliament-dle
          </span>
          <span className="text-sm md:text-base">
            Guess who made the promise
          </span>
        </div>
        <ThemeToggle />
      </header>
      <main className="flex flex-col px-14 w-full justify-center items-center">
        <div className="flex flex-col gap-4 max-w-96 justify-center items-center">
          <QuoteText text={promise.title} />
          <p className="mt-4">‡∏û‡∏£‡∏£‡∏Ñ‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÑ‡∏´‡∏ô‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ ?</p>
          <div className="w-full  flex flex-col gap-2">
            {guesses.map((guess) => (
              <GuessResult guess={guess} />
            ))}
            {!isDone && (
              <div className="flex flex-row gap-2">
                <PartyInput
                  partyList={partyList}
                  selectedParty={selectedParty}
                  onPartyChange={onPartyChange}
                />
                <Button
                  disabled={!selectedParty}
                  onClick={() => {
                    if (!selectedParty) return;
                    onGuess(selectedParty);
                  }}
                >
                  ‡∏ó‡∏≤‡∏¢
                </Button>
              </div>
            )}
            {Array.from({ length: 6 - numGuesses - 1 }).map((_, index) => (
              <EmptyGuess key={index} />
            ))}
            {isDone && guesses.length < 6 && <EmptyGuess />}
          </div>
          {isDone && (
            <div className="flex flex-col gap-4 mt-4 items-center">
              {isCorrect ? (
                <p className="text-center">
                  ‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å ! üëçüèº
                  <br />
                  ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏≥‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡∏≤‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏π‡∏î‡∏à‡∏∞‡∏¢‡∏±‡∏á‡∏à‡∏≥‡πÑ‡∏î‡πâ‡∏°‡∏±‡πâ‡∏¢‡∏ô‡∏∞ ?
                </p>
              ) : (
                <p className="text-center">
                  üëãüèº &nbsp; ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£‡∏ô‡∏∞ <br />
                  ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏á ‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡πÄ‡∏Ç‡∏≤‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏à‡∏≥‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢...
                </p>
              )}
              <PromiseDialog promise={promise} />
            </div>
          )}
        </div>
      </main>
      <footer className="mt-4 pb-4 md:pb-8 w-full flex items-center justify-center">
        <span className="flex flex-rol">
          <Image
            aria-hidden
            src="https://nextjs.org/icons/globe.svg"
            alt="Globe icon"
            width={16}
            height={16}
          />
          &nbsp; Created using data from &nbsp;
          <a
            className="flex bold underline underline-offset-2 hover:underline-offset-4 -ml-1"
            href="https://wevis.info/"
            target="_blank"
            rel="noopener noreferrer"
          >
            WeVIS
          </a>
        </span>
      </footer>
    </div>
  );
}
